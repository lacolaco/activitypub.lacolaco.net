FROM node:19 as builder

WORKDIR /app

# Resolve dependencies
COPY package.json pnpm-lock.yaml ./
RUN corepack enable
RUN pnpm i

# Build an app
COPY . ./
RUN pnpm run build:server

# Use the official Debian slim image for a lean production container.
# https://hub.docker.com/_/debian
# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds
FROM node:19-buster-slim
RUN set -x && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    ca-certificates && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY package.json pnpm-lock.yaml ./

# Copy the binary to the production image from the builder stage.
COPY --from=builder /app/packages/server/dist ./

RUN corepack enable
RUN pnpm i --production

# Run the web service on container startup.
CMD ["node", "./main.js"]